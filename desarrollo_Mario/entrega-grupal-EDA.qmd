---
title: "entrega-grupal-EDA"
author: "MarioC"
format:
  html:
    theme: [style.scss]
    toc: true
    toc-location: right
    toc-title: Índice
editor: visual
---

```{r}
#| message: false
#| warning: false
#Cargar librerias 
library(tidyverse)
library(stringi)
library(lubridate)
library(glue)
library(ggthemes)
library(showtext)
library(ggridges)
library(ggsci)
library(dplyr)
library(scales)
library(gridExtra)
library(ggparliament)
library(ggbreak)
library(magick)
```



```{r}
#| warning: false
datos_elecciones <- read_csv(file = "./datos/datos_elecciones_final.csv")
encuestas <- read_csv(file = "./datos/encuestas_final.csv")

datos_elecciones <- datos_elecciones |>
  mutate(siglas = as.factor(siglas)) |> 
  mutate(fecha=as.factor(fecha))

n_elecc <- datos_elecciones |> distinct(fecha) |> pull() |> length()
```


```{r}
# Censo total en cada elección
maestra_censo <- datos_elecciones |> distinct(fecha, cod_mun, censo) |> summarise(censo=sum(censo), .by = fecha)

# Total de votos por sigla en cada uno de las fechas (agupamos todos los votos de todos los municipios)
data_1 <- datos_elecciones |>
  summarise(votos=sum(votos), .by = c(fecha, siglas)) |> 
  left_join(maestra_censo, by = "fecha")
  # left_join(datos_elecciones |> distinct(fecha, cod_mun, censo) |> summarise(censo=sum(censo), .by = fecha), by = "fecha")

min_votos <- data_1 |> summarise(votos=sum(votos), .by=fecha) |> 
  summarise(min_v=min(votos)) |> pull()

participacion <- data_1 |> summarise(participacion=sum(votos)/max(censo), .by=fecha)

p_votos <- data_1 |> summarise(votos = sum(votos), .by=fecha) |> left_join(maestra_censo, by = "fecha") |> 
  mutate(p_votos = votos/censo) |> select(p_votos) |> pull()
```

Tenemos `r n_elecc` elecciones diferentes. Vamos a ver el número de votos totales en cada elección, el porcentaje de participación y la distribución de los votos a los partidos políticos en cada una de ellas.

::: {.callout-warning}
Ordenar partido por el más votado
¿en las primeras elecciones? ¿se puede hacer el mas votado por cada elección?
:::


```{r}
data_1 |> 
  ggplot(aes(x=fecha, y=votos, fill=siglas))+
  geom_col(position = "fill")+
  theme(legend.position = "bottom")
```

El número de votos siempre se ha mantenido por encima de `r format(min_votos, scientific=FALSE)` votos pero, ¿cuánto ha supuesto este número de votos sobre el total de la población?

Comparando la participiacón con el censo para cada una de las elecciones:

```{r}
data_1 |> summarise(votos=sum(votos), .by=c(fecha, censo)) |> mutate(p_votos=votos/censo) |> 
  ggplot(aes(x=fecha))+
  geom_col(aes(y=censo))+
  geom_hline(yintercept=mean(participacion$participacion)*(1/0.00000003), linetype="dashed", color = "white", linewidth=0.5)+
  geom_line(aes(y = p_votos*(1/0.00000003)),group=1, color = "red")+
  scale_y_continuous(name="votos", sec.axis = sec_axis(~.*0.00000003,name="p_votos"))+
  scale_y_break(c(500000, 20000000))
```
El número de censados aumenta y la participación parece que va a la baja, aunque con seis registros no se puede afirmar con seguridad. En 2.019 hay un repunte de la participación pero de nuevo vuelve a bajar, posiblemente por el "aburrimiento" de volver a votar en ese mismo año.

::: {.callout-warning}
reordenar los factores para que no_votos salga arriba del todo
:::


Miramos el peso que ha tenido las personas censadas que no han votado versus el total de votos por cada una de las elecciones.



```{r}
gif_image <- image_read("https://raw.githubusercontent.com/MarioC0093/Software_GRUPAL_7/main/desarrollo_Mario/votar.gif") %>% image_scale("150")

# fig <- image_graph(width = 300, height = 400)
fig <- image_graph()

data_1 |> summarise(votos=sum(votos),.by=c(fecha, censo)) |> mutate(no_votos=censo-votos) |>
  pivot_longer(cols = c(votos, no_votos), names_to = "tipo_voto") |> 
  ggplot() +
  geom_col(aes(x=fecha, y=value, fill=tipo_voto), position = "fill")


# Composing the full image
# out <- image_composite(fig, gif_image, offset = "+00+100",  gravity = "center")
out <- image_composite(fig, gif_image, offset = "+120+75",  gravity = "southeast")


# Animation of the image
animation <- image_animate(out, fps = 10, optimize = TRUE)

# Show the image
print(animation, info = FALSE) 
```

Al igual que al inicio veíamos los votos recibidos por cada partida, ahora incluímos ese *no voto* como una representatividad más.

```{r}
# ToDo: reordenar los factores para que no_votos salga arriba del todo
data_1 |> summarise(votos=sum(votos),.by=c(fecha, censo)) |> mutate(no_votos=censo-votos) |>
  pivot_longer(cols = c(votos, no_votos), names_to = "tipo_voto") |>
  filter(tipo_voto=="no_votos") |> select(fecha, siglas=tipo_voto, votos=value) |>
  rbind(data_1 |> summarise(votos=sum(votos),.by=c(fecha, siglas))) |> 
  ggplot() +
  geom_col(aes(x=fecha, y=votos, fill=siglas), position = "fill")

rm(data_1)
```



::: {.callout-warning}
Los colores habría que definirlos más atrás
:::


::: {.callout-warning}
pte seleccionar los colores correctos
:::


```{r}
colores_elecciones <- datos_elecciones |> distinct(siglas) |> 
  mutate(color_politico=case_when(siglas == "PP" ~ "#3399FF",	# El color corresponde al elegido en 2019
                         # siglas == "PSOE" ~ "#FF0000",
                         siglas == "PSOE" ~ "#F6350B",
                         siglas == "C's" ~ "#FF5824",
                         siglas == "PNV" ~ "#FF0000",
                         siglas == "BNG" ~ "#FF0000",
                         siglas == "COMPROMÍS" ~ "#FF0000",
                         siglas == "CiU" ~ "#FF0000",
                         siglas == "UP" ~ "#6D50B3",
                         siglas == "ERC" ~ "#FF0000",
                         siglas == "EH - BILDU" ~ "#FF0000",
                         siglas == "MÁS PAÍS" ~ "#E61455",
                         siglas == "VOX" ~ "#73B446",
                         TRUE ~ "#462B25"))
```


La política nacional siempre ha sido bipartidista desde que entro la democracia a finales del siglo pasado. En los últimos años (más bien en las últimas elecciones) ha dado un giro y el bipartidismo ya se quedó atrás en las Cortes Generales.


::: {.callout-warning}
poner el filtro de la fecha en función del nivel del factor
:::

```{r}
#ToDo: poner el filtro de la fecha como el mínimo level de ese factor
parlamento <- datos_elecciones |> filter(fecha=="2008-03-01") |> summarise(votos=sum(votos), .by = c(fecha, siglas))
parlamento <- parlamento |> mutate(asientos = round(350*votos/sum(votos))) |> select(-votos) |> left_join(colores_elecciones, by = "siglas")
semicircle <- parliament_data(election_data = parlamento,
                              type = "semicircle", # Tipo de parlamento
                              parl_rows = 7,      # Número de filas del parlamento
                              party_seats = parlamento$asientos) # Asientos por partido

semi1 <- ggplot(semicircle, aes(x = x, y = y, colour = siglas)) +
  geom_parliament_seats() + 
  theme_ggparliament() +
  labs(title = "2008-03-01") +
  scale_colour_manual(values = semicircle$color_politico, 
                      limits = semicircle$siglas)


#ToDo: poner el filtro de la fecha como el mínimo level de ese factor
parlamento <- datos_elecciones |> filter(fecha=="2019-11-01") |> summarise(votos=sum(votos), .by = c(fecha, siglas))
parlamento <- parlamento |> mutate(asientos = round(350*votos/sum(votos))) |> select(-votos) |> left_join(colores_elecciones, by = "siglas")
semicircle <- parliament_data(election_data = parlamento,
                                 type = "semicircle", # Tipo de parlamento
                                 parl_rows = 7,      # Número de filas del parlamento
                                 party_seats = parlamento$asientos) # Asientos por partido

semi2 <- ggplot(semicircle, aes(x = x, y = y, colour = siglas)) +
  geom_parliament_seats() + 
  theme_ggparliament() +
  labs(title = "2019-11-01") +
  scale_colour_manual(values = semicircle$color_politico, 
                      limits = semicircle$siglas)
```


::: {.callout-note}
ejecutar el siguiente scrip a ver si funciona con vuestra versiones de R
:::


::: {.callout-note}
Habría que poner una nota dentro del gráfico que explique que no es una representatividad exacta de escaños sino que es cómo se vería la representación por porcentaje de votos dentro de Las Cortes.
:::


```{r}
# grid.arrange(semi1, semi2, nrow=2, common.legend = TRUE, legend="bottom")
# da error el common.legend
```

```{r}
#| results: asis hold
par(mfrow = c(2, 1))
semi1+theme(legend.position = "bottom"); semi2+theme(legend.position = "none")
par(mfrow = c(1, 1))
```


```{r}
a <- datos_elecciones |> mutate(provincia=substring(cod_mun,4,5)) |> filter(provincia=="28" | provincia=="08") |> 
   mutate(bipartidismo = if_else(siglas %in% c("PP","PSOE"),1,0)) |> select(fecha,provincia,siglas,votos)

b <- a |> summarise(votos=sum(votos), .by = c(fecha, siglas)) |> pivot_wider(names_from = fecha, values_from = votos)

library(ggsankey)
c <- b %>%
  make_long("2008-03-01","2011-11-01", "2015-12-01", "2016-06-01" ,"2019-04-01", "2019-11-01") 

d <- c |> left_join(a |> summarise(votos=sum(votos), .by = c(fecha, siglas)), by = c("node"="votos",
                                                                                     "x"="fecha"))

d |>
  ggplot(aes(x = x, 
             next_x = next_x, 
             node = node, 
             next_node = next_node,
             fill = factor(siglas),
             label = siglas)) +
  geom_sankey()
```

Los partidos más votados en las últimas dos elecciones han sido PSOE, PP, VOX, CS, y UP - IU, que junto con MP (por el auge conseguido en los últimos meses previos a las últimas elecciones) son los protagonistas en las noticias de política nacional. ¿Realmente estos partidos están concentrando el grueso de votos frente al resto de partidos de corte autonómico o nacionalista y el resto de partidos (*Otros*)?


```{r}
datos_elecciones |> filter(year(fecha)>2018) |> group_by(siglas) |> summarise(v=sum(votos), n_elecciones=n_distinct(fecha),
                                                                              media = v/n_elecciones) |> arrange(-media)
```

::: {.callout-warning}
cambiar el filter por slice del primer registro por fecha pq ese es el de part. proncipales
:::

```{r}
datos_elecciones <- datos_elecciones |> mutate(siglas2 = if_else(siglas %in% c("PSOE","PP","VOX","CS","MP","UP"),
                                                                 "part. principales", "part. aut./nac."))

# datos_elecciones |> summarise(votos=sum(votos), .by = c(fecha, siglas2)) |> reframe(p=votos/sum(votos), .by = fecha) |> 
#     filter(p>0.5) |> mutate(IC_min = p-1.95*sqrt(p*(1-p)/20000000),
#                             IC_max = p+1.95*sqrt(p*(1-p)/20000000))

datos_elecciones |> reframe(votos=sum(votos), .by = c(fecha, siglas2)) |>
  ggplot(aes(x=fecha,y=votos, fill=siglas2))+
  geom_col(position = "fill",width=0.99)
  # geom_errorbar(aes(ymin = ci_lo, ymax = ci_hi), position = position_dodge(0.9), width = 0.2)
```

Podemos plantearnos si existe alguna relación entre el censo del municipio y los resultados de las votaciones, tanto a nivel de municpio como a nivel provincia.

Un análisis en relación al censo presenta el problema de que esta variable toma valores muy amplios:

```{r}
datos_elecciones |> summarise(censo = mean(censo), .by = c(fecha,cod_mun)) |> select(censo) |> summary()

# datos_elecciones |> summarise(censo = mean(censo), .by = c(fecha,cod_mun)) |> 
#   mutate(C_Aut=substring(cod_mun,1,2)) |>
#   ggplot(aes(x = censo)) +
#     geom_density_ridges(aes(fill = C_Aut, color=C_Aut,y=C_Aut), alpha=0.1)

# datos_elecciones |> summarise(censo = mean(censo), .by = c(fecha,cod_mun)) |>
#   mutate(C_Aut=substring(cod_mun,1,2), censo=sqrt(censo)) |>
#   ggplot(aes(x = censo)) +
#     geom_density_ridges(aes(fill = C_Aut, color=C_Aut,y=C_Aut), alpha=0.1)
```

```{r}
plot1 <- datos_elecciones |> distinct(fecha,cod_mun,censo) |> summarise(censo = mean(censo), .by = c(cod_mun)) |> 
  mutate(C_Aut=substring(cod_mun,1,2)) |>
  ggplot(aes(x = censo)) +
  geom_histogram()

plot2 <- datos_elecciones |> distinct(fecha,cod_mun,censo) |> summarise(censo = mean(censo), .by = c(cod_mun)) |> 
  mutate(C_Aut=substring(cod_mun,1,2), censo_log=log(censo)) |>
  ggplot(aes(x = censo_log)) +
  geom_histogram()

grid.arrange(plot1, plot2, ncol=2)
```

Agrupando los municipios por Comunidad Autónoma la variable log(censo) tiene múltiples outliers en cada Comunidad (no para Caueta y Melilla)

::: {.callout-warning}
No tiene sentido hacer un label con el código de la C. Autónoma cuando el gráfico es a nivel de la Comunidad.
Buscar método de identificar outliers en boxplot para que se queden marcados/coloreados en vez de poner el geom_text
:::

```{r}
plot1 <- datos_elecciones |> distinct(fecha,cod_mun,censo) |> summarise(censo = mean(censo), .by = c(cod_mun)) |> 
  mutate(C_Aut=substring(cod_mun,1,2)) |>
  ggplot(aes(x=C_Aut, y = censo)) +
  geom_boxplot()+
  geom_text(aes(label= ifelse(censo > 100000,
                              as.character(C_Aut),'')),hjust=0,vjust=0)

plot2 <- datos_elecciones |> distinct(fecha,cod_mun,censo) |> summarise(censo = mean(censo), .by = c(cod_mun)) |> 
  mutate(C_Aut=substring(cod_mun,1,2), censo_log=log(censo)) |>
  ggplot(aes(x=C_Aut, y = censo_log)) +
  geom_boxplot()+
  geom_text(aes(label= ifelse(censo_log > log(100000),
                              as.character(C_Aut),'')),hjust=0,vjust=0)

grid.arrange(plot1, plot2, ncol=2)
```

Nos centramos en aquellos municipios donde el censo es mayor a 100.000 y vemos que los partidos más votados en conjunto fueron PP y PSOE.

```{r}
datos_elecciones |> filter(censo > 100000) |> arrange(fecha, cod_mun, -votos) |> 
  slice_max(votos, n=1, by=c(fecha, cod_mun)) |> 
  ggplot(aes(x=siglas))+
  geom_bar()
```

La visualización anterior es en conjunto de todos los municipios con más de 100.00 habitantes (se suman todos los votos de los municipos y se visualiza la distribución de los votos). Si bajamos a nivel municipio para ver el primer y segundo partido más votado e incluímos a todos los municipios sin excluir en función del censo: 

```{r}
datos_elecciones|> arrange(fecha, cod_mun, -votos) |> 
  slice_max(votos, n=2, by=c(fecha, cod_mun)) |> select(fecha, cod_mun, siglas, votos)
 #   fecha      cod_mun   siglas votos
 #   <fct>      <chr>     <fct>  <dbl>
 # 1 2008-03-01 01-04-001 PSOE     512
 # 2 2008-03-01 01-04-001 PP       382
 # 3 2008-03-01 01-04-002 PSOE     532
 # 4 2008-03-01 01-04-002 PP       340

# Partido más votado
mas_votado1 <- 
datos_elecciones |> arrange(fecha, cod_mun, -votos) |> 
  slice_max(votos, n=2, by=c(fecha, cod_mun), with_ties = TRUE) |> select(fecha, cod_mun, siglas, votos) |> 
  slice_max(votos, n=1, by=c(fecha, cod_mun), with_ties = TRUE) |> mutate(posicion = "Más votado")
 #   fecha      cod_mun   siglas  votos
 #   <fct>      <chr>     <fct>   <dbl>
 # 1 2008-03-01 01-04-001 PSOE     512 Más votado
 # 2 2008-03-01 01-04-002 PSOE     532 Más votado

# Segundo partido más votado
mas_votado2 <- 
datos_elecciones |> arrange(fecha, cod_mun, -votos) |> 
  slice_max(votos, n=2, by=c(fecha, cod_mun), with_ties = TRUE) |> select(fecha, cod_mun, siglas, votos) |> 
  slice_min(votos, n=1, by=c(fecha, cod_mun), with_ties = TRUE) |> mutate(posicion = "Segundo más votado")
 #   fecha      cod_mun   siglas  votos
 #   <fct>      <chr>     <fct>   <dbl>
 # 1 2008-03-01 01-04-001 PP       382 Segundo más votado
 # 2 2008-03-01 01-04-002 PP       340 Segundo más votado

mas_votado <- rbind(mas_votado1,mas_votado2)

mas_votado |> select(siglas, posicion) |> table()
```

Como no tenemos manera de deshacer un empate de votos, permitimos tener más de un partido en primera posición. En estos casos, todos los partidos que estén en primera posición ocuparán tanto el primer como el segundo puesto.

Así:

```{r}
#| results: hold
mas_votado1 |> filter(fecha=="2019-11-01" & cod_mun=="01-04-021")
mas_votado2 |> filter(fecha=="2019-11-01" & cod_mun=="01-04-021")
```

O:
```{r}
#| results: hold
mas_votado1 |> filter(fecha=="2015-12-01" & cod_mun=="07-19-010")
mas_votado2 |> filter(fecha=="2015-12-01" & cod_mun=="07-19-010")
```


```{r}
mas_votado1 |> select(fecha, cod_mun, siglas, posicion) |>
  left_join(mas_votado2 |> select(fecha, cod_mun, siglas, posicion),
            by=c("fecha","cod_mun"), suffix = c("_primero","_segundo")) |> 
  make_long("siglas_primero","siglas_segundo") |> 
  ggplot(aes(x = x, 
             next_x = next_x, 
             node = node, 
             next_node = next_node,
             fill = factor(node),
             label = node))+
  ggsankey::geom_sankey(flow.alpha = 0.5, node.color = 1) +
  ggsankey::geom_sankey_text(size = 3.5, color = 1, fill = "white")+
  theme(legend.position = "none")
```

```{r}
mas_votado |> select(siglas, posicion)%>%
  make_long(siglas,posicion)
```



### Problema 1.

::: callout-tip
## Vicente & Diana

He estado un rato intentando sacar alguna relación entre el censo y el número de mesas con el objetivo de detectar algún outlier o meter un geom_stat con un lm para predecir una a partir de la otra.

Dadle una vuelta a ver si vosotros sacáis algo.
:::


```{r}
#| results: hold
datos_elecciones |> group_by(cod_mun) |> # para todas las fechas
  summarise_at(vars(censo,numero_mesas), mean, na.rm = TRUE) |> mutate(provincia=substring(cod_mun,4,5)) |> 
ggplot(aes(x = censo, y = numero_mesas)) +
  geom_point(alpha = 0.1, aes(color = provincia))+
  geom_text(aes(label= ifelse(censo > 1000000,
                              as.character(provincia),'')),hjust=0,vjust=0)


datos_elecciones |> group_by(cod_mun) |> # para todas las fechas
  summarise_at(vars(censo,numero_mesas), mean, na.rm = TRUE) |> mutate(provincia=substring(cod_mun,4,5)) |> 
  filter(!provincia %in% c("08","28")) |> 
  ggplot(aes(x = log(censo), y = log(numero_mesas))) +
  geom_point(alpha = 0.1, aes(color = provincia))+
  geom_text(aes(label= ifelse(censo > quantile(censo,0.95),
                              as.character(provincia),'')),hjust=0,vjust=0)


datos_elecciones |> mutate(provincia=substring(cod_mun,4,5)) |> group_by(provincia) |> # para todas las fechas
  summarise_at(vars(censo,numero_mesas), mean, na.rm = TRUE) |> 
  ggplot(aes(x = (censo), y = (numero_mesas))) +
  geom_point(alpha = 0.1, aes(color = provincia))+
  geom_text(aes(label= ifelse(censo > quantile(censo,0.95) | numero_mesas > quantile(numero_mesas,0.95),
                              as.character(provincia),'')),hjust=0,vjust=0)


datos_elecciones |> mutate(provincia=substring(cod_mun,4,5)) |> group_by(provincia) |> # para todas las fechas
  summarise_at(vars(censo,numero_mesas), mean, na.rm = TRUE) |> 
  filter(!provincia %in% c("35","28","52","51")) |> 
  ggplot(aes(x = (censo), y = (numero_mesas))) +
  geom_point(alpha = 0.1, aes(color = provincia))+
  geom_text(aes(label= ifelse(censo > quantile(censo,0.95) | numero_mesas > quantile(numero_mesas,0.95),
                              as.character(provincia),'')),hjust=0,vjust=0)


# el número medio de personas censadas por mesa que hay
datos_elecciones |> distinct(fecha, cod_mun, censo, numero_mesas) |> 
  mutate(provincia=substring(cod_mun,4,5),
                           personas_mesa = censo/numero_mesas) |> group_by(provincia,fecha) |> # para todas las fechas
  summarise_at(vars(personas_mesa), mean, na.rm = TRUE) |> 
  # filter(!provincia %in% c("35","28","52","51")) |> 
  ggplot(aes(x = (provincia), y = (personas_mesa))) +
  geom_point(alpha = 0.1, aes(color = fecha))+
  # facet_wrap(~fecha)+
  geom_text(aes(label= ifelse(personas_mesa > quantile(personas_mesa,0.99),
                              as.character(provincia),'')),hjust=0,vjust=0)
```
    
